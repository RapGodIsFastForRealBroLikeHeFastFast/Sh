local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")

local LocalPlayer = Players.LocalPlayer
local angle = 1
local radius = 1
local angleSpeed = 1
local orbitResponsiveness = 1
local blackHoleActive = false

local blackHoleLoop
local forceConnection
local partFolder
local attachment1
local humanoidRootPart
local blackHolePart

local function isPlayerPart(part)
	return part:IsDescendantOf(LocalPlayer.Character)
end

local function createEffects(part)
    -- Glow Ring (3D Mesh)
    local ring = Instance.new("MeshPart")
    ring.MeshId = "rbxassetid://60229124"  -- Cylinder mesh (change to your own if needed)
    ring.Size = Vector3.new(10, 1, 10)  -- Make the ring wider and thin in the Y-axis
    ring.CFrame = part.CFrame
    ring.Anchored = true
    ring.CanCollide = false
    ring.Material = Enum.Material.SmoothPlastic
    ring.Color = Color3.fromRGB(0, 0, 0)
    ring.Transparency = 0.3
    ring.Parent = partFolder

    -- Add glow effect using ParticleEmitter
    local glow = Instance.new("ParticleEmitter", ring)
    glow.Texture = "rbxassetid://4941579251"  -- Texture for the particles (choose one you prefer)
    glow.Rate = 50  -- Rate of particles being emitted
    glow.Lifetime = NumberRange.new(1, 2)  -- How long each particle lasts
    glow.Size = NumberSequence.new(2, 5)  -- How the particles grow (start small, get bigger)
    glow.Color = ColorSequence.new(Color3.fromRGB(255, 255, 255))  -- Particle color (white glow)
    glow.LightEmission = 1  -- How much light the particles emit (1 is fully lit)
    glow.Speed = NumberRange.new(5, 10)  -- Speed of particles in random directions
    glow.SpreadAngle = Vector2.new(0, 360)  -- Spread the particles in a circular motion
    glow.RotSpeed = NumberRange.new(0, 360)  -- Rotation speed of particles
end

local function setupAttachment()
	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	humanoidRootPart = character:WaitForChild("HumanoidRootPart")

	if partFolder then partFolder:Destroy() end
	partFolder = Instance.new("Folder", Workspace)
	partFolder.Name = "BlackHoleFolder"

	blackHolePart = Instance.new("Part", partFolder)
	blackHolePart.Anchored = true
	blackHolePart.CanCollide = false
	blackHolePart.Transparency = 1 -- Initially hidden
	blackHolePart.Size = Vector3.new(5, 5, 5)
	blackHolePart.Color = Color3.new(0, 0, 0)
	blackHolePart.Material = Enum.Material.SmoothPlastic

	createEffects(blackHolePart)

	attachment1 = Instance.new("Attachment", blackHolePart)
end

local function ForcePart(v)
	if v:IsA("Part") and not v.Anchored and not isPlayerPart(v) and not v.Parent:FindFirstChild("Humanoid") and v.Name ~= "Handle" then
		for _, x in pairs(v:GetChildren()) do
			if x:IsA("BodyAngularVelocity") or x:IsA("BodyForce") or x:IsA("BodyGyro") or x:IsA("BodyPosition") or x:IsA("BodyThrust") or x:IsA("BodyVelocity") or x:IsA("RocketPropulsion") then
				x:Destroy()
			end
		end
		if v:FindFirstChild("Attachment") then v.Attachment:Destroy() end
		if v:FindFirstChild("AlignPosition") then v.AlignPosition:Destroy() end
		if v:FindFirstChild("Torque") then v.Torque:Destroy() end

		v.CanCollide = false

		local torque = Instance.new("Torque", v)
		torque.Torque = Vector3.new(1e6, 1e6, 1e6)
		local alignPos = Instance.new("AlignPosition", v)
		local attachment2 = Instance.new("Attachment", v)
		torque.Attachment0 = attachment2
		alignPos.MaxForce = math.huge
		alignPos.MaxVelocity = math.huge
		alignPos.Responsiveness = orbitResponsiveness
		alignPos.Attachment0 = attachment2
		alignPos.Attachment1 = attachment1
	end
end

local function startBlackHole()
	if not blackHolePart then return end
	blackHolePart.Transparency = 0 -- Show it

	if blackHoleLoop then blackHoleLoop:Disconnect() end
	blackHoleLoop = RunService.RenderStepped:Connect(function()
		if humanoidRootPart and attachment1 then
			local offsetX = math.cos(angle) * radius
			local offsetZ = math.sin(angle) * radius
			local targetCFrame = humanoidRootPart.CFrame * CFrame.new(offsetX, 6, offsetZ)
			blackHolePart.CFrame = targetCFrame
			attachment1.WorldCFrame = targetCFrame
			angle += math.rad(angleSpeed)
		end
	end)

	for _, v in ipairs(Workspace:GetDescendants()) do
		ForcePart(v)
	end

	if forceConnection then forceConnection:Disconnect() end
	forceConnection = Workspace.DescendantAdded:Connect(function(v)
		ForcePart(v)
	end)
end

local function stopBlackHole()
	if blackHoleLoop then blackHoleLoop:Disconnect() blackHoleLoop = nil end
	if forceConnection then forceConnection:Disconnect() forceConnection = nil end
	if blackHolePart then
		blackHolePart.Transparency = 1 -- Hide it
		blackHolePart.CFrame = CFrame.new(0, -1000, 0)
	end
end

local function toggleBlackHole(state)
	blackHoleActive = state
	if state then
		startBlackHole()
	else
		stopBlackHole()
	end
end

-- Re-setup on respawn
LocalPlayer.CharacterAdded:Connect(function()
	task.wait(1)
	setupAttachment()
	if blackHoleActive then
		startBlackHole()
	end
end)

setupAttachment()

-- Optional Bloom for glow
local bloom = Instance.new("BloomEffect", Lighting)
bloom.Intensity = 2
bloom.Threshold = 0
bloom.Size = 56

-- UI
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/miroeramaa/TurtleLib/main/TurtleUiLib.lua"))()
local window = library:Window("Projeto LKB")

window:Slider("Radius Blackhole", 1, 100, 1, function(val)
	radius = val
end)

window:Slider("Spin Speed", 1, 1000, 1, function(val)
	angleSpeed = val
end)

window:Slider("Orbit Speed", 1, 1000, 1, function(val)
	orbitResponsiveness = val
end)

window:Toggle("Blackhole", false, function(state)
	toggleBlackHole(state)
end)
